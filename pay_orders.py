from aiogram.types import Message, LabeledPrice, PreCheckoutQuery
from aiogram.types.message import ContentType
from create_bot import bot, dp
from handlers import client, other
from config import PAY_TOKEN, CHANNEL_ID_ADMIN
from data_base import data_from_bot


info = {}


# photo_url='https://s00.yaplakal.com/pics/pics_original/2/5/7/16011752.jpg', photo_size=512, photo_height=250,
# photo_width=250,
async def pay_order(message: Message, data):
    info[str(message.chat.id)] = data[0]
    order = [LabeledPrice(label=data[5], amount=int(data[6].split()[0]) * 100)]
    await bot.send_invoice(message.chat.id, title=data[5],
                           description='–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ, –≤—Å—ë –±—É–¥–µ—Ç –æ–∫–µ–π.',
                           provider_token=PAY_TOKEN,
                           currency='rub',
                           need_name=True,
                           need_phone_number=True,
                           prices=order,
                           payload='same')


@dp.pre_checkout_query_handler(lambda x: True)
async def check_progress(checkout_query: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(checkout_query.id, ok=True)


@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def answer_after_buy(message: Message):
    data_from_bot.replace_payment_status(info[str(message.chat.id)])
    await bot.send_message(CHANNEL_ID_ADMIN, f'‚Ññ{info[str(message.chat.id)]} - –û–ü–õ–ê–ß–ï–ù')
    del info[str(message.chat.id)]
    if message.from_user.username is not None:
        await bot.send_message(message.chat.id, '*–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!* –Ø —É–∂–µ –ø–µ—Ä–µ–¥–∞–ª –í–∞—à—É –∑–∞—è–≤–∫—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. '
                                                '–û–Ω —Å–∫–æ—Ä–æ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è! \n\n–ï—Å–ª–∏ –¥–µ–ª–æ —Å—Ä–æ—á–Ω–æ–µ, –í—ã –º–æ–∂–µ—Ç–µ '
                                                '—Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É üë®‚Äçüíª',
                               reply_markup=other.inline_touch_admin, parse_mode='Markdown')
    else:
        await bot.send_message(message.chat.id, '*–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!* –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º '
                                                '–Ω–∞–∂–∞—Ç–∏–µ–º —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ ‚¨á', reply_markup=other.inline_touch_admin, parse_mode='Markdown')
        await bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã –º—ã –º–æ–≥–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å—Å–∫–∏ —Å–≤—è–∑—ã–≤–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º, '
                                                '–∑–∞–¥–∞–π—Ç–µ —Å–µ–±–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Å—ã–ª–∫—É) –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö '
                                                '–¢–µ–ª–µ–≥—Ä–∞–º–º üìå')

    await client.create_main_bottom(message)
